<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.song</title>
  <subtitle>step by step</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-22T12:39:37.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>songgl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql unsigned/int字段越界</title>
    <link href="http://yoursite.com/mysql-bigint-out-of-range/"/>
    <id>http://yoursite.com/mysql-bigint-out-of-range/</id>
    <published>2017-05-22T02:41:39.000Z</published>
    <updated>2017-05-22T12:39:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>线上的<code>MySQL</code>错误日志中遇到了以下问题<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Data truncation: BIGINT <span class="built_in">UNSIGNED</span> value <span class="keyword">is</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="keyword">range</span> <span class="keyword">in</span> `(database.tablename.fieldname)`</div></pre></td></tr></table></figure></p>
<p><code>MySQL</code>版本为:<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="section">mysql&gt; select version();</span></div><div class="line">+------------+</div><div class="line"><span class="section">| version()  |</span></div><div class="line">+------------+</div><div class="line"><span class="section">| 5.6.21-log |</span></div><div class="line">+------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>引起这个错误的原因是<code>sql</code>语句中对<code>unsigned</code>字段进行了递减操作的结果为负数导致的,<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> <span class="keyword">database</span>.tablename <span class="keyword">set</span> fieldname=fieldname-num</div></pre></td></tr></table></figure></p>
<p>而<code>MySQL</code>的模式是默认的<code>mode</code>:<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="section">mysql&gt; show variables like 'sql_mode';</span></div><div class="line">+---------------+------------------------+</div><div class="line"><span class="section">| Variable_name | Value                  |</span></div><div class="line">+---------------+------------------------+</div><div class="line"><span class="section">| sql_mode      | NO_ENGINE_SUBSTITUTION |</span></div><div class="line">+---------------+------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>解决方案有3种:</p>
<p>1.程序中做数据合法性检查，先查询出来，递减之后判断结果，结果正常再去插入，不过这样需要2次<code>sql</code>操作，需要保证操作的原子性，不然容易引起数据一致性问题.</p>
<p>2.在同一个<code>session</code>中临时修改<code>MySQL</code>的<code>sql_mode</code>:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> sql_mode=<span class="string">'NO_UNSIGNED_SUBTRACTION'</span>;</div><div class="line"><span class="keyword">UPDATE</span> database.tablename <span class="keyword">SET</span> fieldname=fieldname-<span class="keyword">num</span></div></pre></td></tr></table></figure></p>
<p><code>NO_UNSIGNED_SUBTRACTION</code> 模式下，对于<code>unsigned</code>字段，如果插入负值，则会讲该字段的值自动设置为 0 .</p>
<p>3.如果<code>unsigned</code>字段能接受负值,则可以使用<code>CAST</code>函数处理:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> sql_mode=<span class="string">'NO_UNSIGNED_SUBTRACTION'</span>;</div><div class="line"><span class="keyword">UPDATE</span> database.tablename <span class="keyword">SET</span> fieldname=<span class="keyword">CAST</span>(fieldname-<span class="keyword">num</span> <span class="keyword">AS</span> <span class="keyword">UNSIGNED</span>);</div></pre></td></tr></table></figure></p>
<p>需要注意的是<code>CAST</code>的表现会因不同的<code>sql_mode</code>而不同，需要合适的<code>sql_mode</code>和<code>CAST</code>配合使用.</p>
<p>参考:</p>
<ul>
<li><a href="https://dev.mysql.com/doc/refman/5.6/en/out-of-range-and-overflow.html" target="_blank" rel="external">mysql out-of-range-and-overflow</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.6/en/sql-mode.html" target="_blank" rel="external">mysql sql mode</a></li>
<li><a href="https://dev.mysql.com/doc/refman/5.6/en/sql-mode.html#sqlmode_no_unsigned_subtraction" target="_blank" rel="external">mysql no_unsigned_subtraction mode</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;线上的&lt;code&gt;MySQL&lt;/code&gt;错误日志中遇到了以下问题&lt;br&gt;&lt;figure class=&quot;highlight vhdl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/t
    
    </summary>
    
      <category term="mysql" scheme="http://yoursite.com/categories/mysql/"/>
    
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Linux强制卸载设备</title>
    <link href="http://yoursite.com/umount-device-when-its-buzy/"/>
    <id>http://yoursite.com/umount-device-when-its-buzy/</id>
    <published>2017-05-12T03:04:07.000Z</published>
    <updated>2017-05-16T13:45:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux下因为磁盘出问题而导致了<code>Input/output error</code>,所以准备先把有问题的磁盘卸载掉再重新挂上试试。</p>
<p>执行<code>umount</code>:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@hostname ~]<span class="comment"># umount -n /dev/sdc1</span></div><div class="line">umount: /home/data: device <span class="keyword">is</span> busy.</div><div class="line">        (In <span class="keyword">some</span> cases useful info <span class="keyword">about</span> processes <span class="keyword">that</span> use</div><div class="line">         <span class="keyword">the</span> device <span class="keyword">is</span> found <span class="keyword">by</span> lsof(<span class="number">8</span>) <span class="keyword">or</span> fuser(<span class="number">1</span>))</div></pre></td></tr></table></figure></p>
<p>显示设备正忙，所以执行<code>umount -nf</code>:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@hostname ~]<span class="comment"># umount -nf /dev/sdc1</span></div><div class="line">umount2: Device <span class="keyword">or</span> resource busy</div><div class="line">umount: /home/data: device <span class="keyword">is</span> busy.</div><div class="line">        (In <span class="keyword">some</span> cases useful info <span class="keyword">about</span> processes <span class="keyword">that</span> use</div><div class="line">         <span class="keyword">the</span> device <span class="keyword">is</span> found <span class="keyword">by</span> lsof(<span class="number">8</span>) <span class="keyword">or</span> fuser(<span class="number">1</span>))</div><div class="line">umount2: Device <span class="keyword">or</span> resource busy</div></pre></td></tr></table></figure></p>
<p>还是无法卸载。</p>
<p>根据给出的提示，使用<code>losf</code>或者<code>fuser</code>来找出那些进程正在使用该设备:<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@yourdream ~]<span class="attr"># fuser -cu /dev/sdc1</span></div><div class="line">/dev/sdc<span class="number">1</span>:            <span class="number">2444</span>c<span class="comment">(root)</span>  <span class="number">2458</span>c<span class="comment">(root)</span>  <span class="number">3041</span>c<span class="comment">(mysql)</span></div><div class="line">[root@yourdream ~]<span class="attr"># fuser -cu /dev/sdc1</span></div></pre></td></tr></table></figure></p>
<p>使用<code>c</code>指定挂载的文件系统，<code>u</code>显示使用者的id。可以看出三个进程正在使用，通过<code>ps</code>可以查到分别为<code>redis</code>和<code>mysql</code>正在使用。<br>因此，卸载之前停掉<code>redis</code>和<code>mysql</code>之后再次执行<code>umount</code>就能正常卸载了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux下因为磁盘出问题而导致了&lt;code&gt;Input/output error&lt;/code&gt;,所以准备先把有问题的磁盘卸载掉再重新挂上试试。&lt;/p&gt;
&lt;p&gt;执行&lt;code&gt;umount&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;highlight apples
    
    </summary>
    
      <category term="notes" scheme="http://yoursite.com/categories/notes/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>I-love-vim</title>
    <link href="http://yoursite.com/i-love-vim/"/>
    <id>http://yoursite.com/i-love-vim/</id>
    <published>2017-05-07T14:08:15.000Z</published>
    <updated>2017-05-07T15:00:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>个人是一个<code>vi</code>重度使用者，所以尽可能的会希望所使用的工具中都能支持<code>vim</code>来方便操作。</p>
<ul>
<li>chrome浏览器支持 <code>vim</code>操作: Vimium 扩展</li>
<li>atom 编辑器: vim-mode、vim-mode-plus</li>
<li>sublime text: 天然支持，配置中<code>ignored_packages</code> 置为空<code>[]</code>即可</li>
<li>idea 编辑器：<code>vim</code> 插件用来编辑文件内容，还有一个和<code>Vimium</code>相似的插件(名称遗忘,自己未使用)，以和<code>Vimium</code>相同的方式操作<code>idea</code>的各种菜单</li>
<li>command line: 大部分天然支持<code>vim</code>编辑模式 (非 <code>windows</code> 系统),自行给<code>vim</code>安装了一些插件，打造成了一个命令行的<code>golang</code>的<code>IDE</code><ul>
<li>目录：<code>scrooloose/nerdtree</code></li>
<li>目录git状态：<code>Xuyuanp/nerdtree-git-plugin</code></li>
<li>自动完成：<code>Shougo/neocomplete</code></li>
<li>go相关格式等工具：<code>fatih/vim-go</code></li>
</ul>
</li>
</ul>
<p>最后，附上一张命令行<code>IDE</code>效果图:<br><img src="images/vim.png" alt="vim-ide"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;个人是一个&lt;code&gt;vi&lt;/code&gt;重度使用者，所以尽可能的会希望所使用的工具中都能支持&lt;code&gt;vim&lt;/code&gt;来方便操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chrome浏览器支持 &lt;code&gt;vim&lt;/code&gt;操作: Vimium 扩展&lt;/li&gt;
&lt;li&gt;atom
    
    </summary>
    
      <category term="tools" scheme="http://yoursite.com/categories/tools/"/>
    
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>dbm--python的一个简易K-V数据库</title>
    <link href="http://yoursite.com/python-dbm/"/>
    <id>http://yoursite.com/python-dbm/</id>
    <published>2017-05-07T13:46:13.000Z</published>
    <updated>2017-05-07T14:02:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>在一些小型简单的<code>python</code>程序中,不需要(不想)引入庞大的关系型数据库或者其他大型的非关系型数据库(NoSql)时，<code>dbm</code>模块是一个非常不错的选择。<br>不过在使用的时候需要注意的是，它要求<code>key</code>,<code>value</code>均为字符串类型。<br>可以对其进行一个简单的封装，便于使用。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> dbm</div><div class="line"><span class="keyword">from</span> models.Config.Config <span class="keyword">import</span> Config</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DBM</span><span class="params">(object)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        self._db = dbm.open(Config.parse_config(<span class="string">'dbm'</span>, <span class="string">'dbfile'</span>), <span class="string">'c'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set</span><span class="params">(self, key, value)</span>:</span></div><div class="line">        self._db[key] = str(value)</div><div class="line">        <span class="keyword">return</span> self</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">del</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self._db.keys():</div><div class="line">            <span class="keyword">del</span> self._db[key]</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, key)</span>:</span></div><div class="line">        <span class="keyword">if</span> key <span class="keyword">in</span> self._db.keys():</div><div class="line">            <span class="keyword">return</span> self._db[key]</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> <span class="keyword">None</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></div><div class="line">        self._db.close()</div></pre></td></tr></table></figure></p>
<blockquote>
<p>Config 是自己封装的一个简易的配置文件解析的类，负责从<code>ini</code>文件中读取指定的配置</p>
</blockquote>
<p><code>dbm</code> 的 <code>api</code> 非常简单，<code>set</code>、<code>del</code>、<code>keys</code>，其数据结构和字典非常相似，可以在小型项目中来当做简易的K/V数据库来使用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在一些小型简单的&lt;code&gt;python&lt;/code&gt;程序中,不需要(不想)引入庞大的关系型数据库或者其他大型的非关系型数据库(NoSql)时，&lt;code&gt;dbm&lt;/code&gt;模块是一个非常不错的选择。&lt;br&gt;不过在使用的时候需要注意的是，它要求&lt;code&gt;key&lt;/cod
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="dbm" scheme="http://yoursite.com/tags/dbm/"/>
    
      <category term="database" scheme="http://yoursite.com/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>hexo 命令备忘录</title>
    <link href="http://yoursite.com/hexo-command-notes/"/>
    <id>http://yoursite.com/hexo-command-notes/</id>
    <published>2017-05-07T13:35:26.000Z</published>
    <updated>2017-05-07T13:42:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录个人一些 <code>hexo</code> 常用命令备查:</p>
<ul>
<li>创建新的文章: <code>hexo new post-title</code></li>
<li>生成db和静态文件： <code>hexo generate</code>,缩写为 <code>hexo g</code></li>
<li>删除cache和静态文件：<code>hexo clean</code></li>
<li>本地开始预览server：<code>hexo server</code>,缩写为 <code>hexo s</code>,默认端口为 <code>4000</code></li>
<li>部署到远程: <code>hexo deply</code>,缩写为 <code>hexo d</code></li>
</ul>
<p>有时候部署到远程后发现<code>blog</code>并没有更新，则可以先<code>clean</code>之后再 <code>deploy</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo g <span class="_">-d</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里记录个人一些 &lt;code&gt;hexo&lt;/code&gt; 常用命令备查:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建新的文章: &lt;code&gt;hexo new post-title&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;生成db和静态文件： &lt;code&gt;hexo generate&lt;/code&gt;,缩
    
    </summary>
    
      <category term="notes" scheme="http://yoursite.com/categories/notes/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>中文正则匹配</title>
    <link href="http://yoursite.com/regex-match-chinese/"/>
    <id>http://yoursite.com/regex-match-chinese/</id>
    <published>2017-05-07T12:36:05.000Z</published>
    <updated>2017-05-07T13:28:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在某些场景下，需要使用正则对文本中的中文进行匹配。之前就在一个<code>python</code>的项目中需要对中文进行相应的匹配。<br>实际需求: 要求匹配非中文内容。<br>中文的<code>unicode</code>编码范围为 <code>u4e00</code> 到 <code>u9fa5</code>。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">group = re.search(<span class="string">ur'([^\u4e00-\u9fa5])'</span>,<span class="string">'1中文en汉字'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> group:</div><div class="line">	<span class="keyword">print</span> grou.groups()</div></pre></td></tr></table></figure></p>
<p>Tips:</p>
<blockquote>
<p>1.正则非匹配: ^<br>2.正则范围匹配: [a-b]<br>3.正则捕获: ()<br>4.python2 中 u 表示 <code>unicode</code>的字符串, python3 已经全部使用<code>unicode</code>来表示字符串<br>5.python 中 r 表示 <code>row string</code>,使用原始字符串，不进行转义</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在某些场景下，需要使用正则对文本中的中文进行匹配。之前就在一个&lt;code&gt;python&lt;/code&gt;的项目中需要对中文进行相应的匹配。&lt;br&gt;实际需求: 要求匹配非中文内容。&lt;br&gt;中文的&lt;code&gt;unicode&lt;/code&gt;编码范围为 &lt;code&gt;u4e00&lt;/code
    
    </summary>
    
      <category term="notes" scheme="http://yoursite.com/categories/notes/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="regex" scheme="http://yoursite.com/tags/regex/"/>
    
  </entry>
  
  <entry>
    <title>shell脚本修改环境变量</title>
    <link href="http://yoursite.com/shell-change-path/"/>
    <id>http://yoursite.com/shell-change-path/</id>
    <published>2017-04-28T04:04:50.000Z</published>
    <updated>2017-04-28T13:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时候编写go程序的时候需要将当前目录加到系统<code>GOPATH</code>中，不然就得将代码放置在已有的<code>GOPATH</code>之下。所以一般习惯在项目根目录执行创建一个<code>shell</code>脚本来动态的修改<code>GOPTAH</code>。<br>脚本很简单，代码如下:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#/bin/sh</span></div><div class="line">CURRENT=`<span class="built_in">pwd</span>`</div><div class="line"><span class="built_in">export</span> GOPATH=<span class="string">"<span class="variable">$&#123;GOPATH&#125;</span>:<span class="variable">$&#123;CURRENT&#125;</span>"</span></div></pre></td></tr></table></figure></p>
<p>因为是<code>shell</code>脚本，所以就习惯性的执行了如下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sh env</div><div class="line"><span class="built_in">echo</span> <span class="variable">$GOPATH</span></div></pre></td></tr></table></figure></p>
<p>期望<code>GOPATH</code>中已经追加上了当前目录，然而事与愿违，并没有什么效果，<code>GOPATH</code>仍然是之前的内容。</p>
<p>原因:<br>使用 <code>sh</code> 命令来执行shell脚本的时候,脚本真正是在<code>sh</code>创建的子<code>shell</code>中执行,所以当<code>sh</code>进程完成的时候并没有修改系统变量,所以通过执行 <code>sh env</code> 来修改系统变量是无效的。子<code>shell</code>和父<code>shell</code>彼此无法使用对方的变量，子<code>shell</code>对环境变量的修改也不会影响父<code>shell</code>。<br>需要使用 <code>source env</code>来执行，<code>source</code>命令执行脚本的时候，是在<code>source</code>当前<code>shell</code>中执行的,并不会创建子<code>shell</code>。</p>
<p>参考: <a href="http://bbs.chinaunix.net/thread-2211666-1-1.html" target="_blank" rel="external">用source 执行脚本和用sh 执行脚本有什么区别</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候编写go程序的时候需要将当前目录加到系统&lt;code&gt;GOPATH&lt;/code&gt;中，不然就得将代码放置在已有的&lt;code&gt;GOPATH&lt;/code&gt;之下。所以一般习惯在项目根目录执行创建一个&lt;code&gt;shell&lt;/code&gt;脚本来动态的修改&lt;code&gt;GOPTAH&lt;/
    
    </summary>
    
      <category term="notes" scheme="http://yoursite.com/categories/notes/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Shell" scheme="http://yoursite.com/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Alfred 编写 workflow</title>
    <link href="http://yoursite.com/alfred-workflow/"/>
    <id>http://yoursite.com/alfred-workflow/</id>
    <published>2017-03-26T14:41:37.000Z</published>
    <updated>2017-04-28T13:11:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>Alfred</code> 的一个亮点功能就是<code>workflow</code>。通过<code>workflow</code>用户可以很容易的扩展<code>alfred</code>的功能,<br>而开源的优秀的<code>workflow</code>也有很多，不过如果找不到自己满意的<code>workflow</code>，可以自己动手编写<code>workflow</code>。自己动手，丰衣足食！<br>之所以重复造轮子的原因的是因为这个<a href="https://github.com/mwaterfall/alfred-datetime-format-converter" target="_blank" rel="external">datetie-format-converter</a> 转换的时间是按照UTC-GMT时间来算的，所以对于中国来说，属于东八区，所以就写了一个<code>php</code>版本的自己使用。<br>这里只是简单记录下自己开发的一个<code>Unix</code>时间戳转换的<code>workflow</code>的过程，详细教程请自行<code>google</code>或者参考 <a href="http://myg0u.com/python/2015/05/23/tutorial-alfred-workflow.html" target="_blank" rel="external">这篇教程</a>.<br><a id="more"></a></p>
<h3 id="一些基本概念"><a href="#一些基本概念" class="headerlink" title="一些基本概念"></a>一些基本概念</h3><p><code>workflow</code>可以使用脚本语言来编写，包括但不限于<code>bash</code>、<code>php</code>、<code>python</code>、<code>ruby</code>等。<code>workflow</code>中的<code>triggers</code>、<code>inputs</code>、<code>actions</code>、<code>ouputs</code>等基本概念就不解释了，详细了解的可以自己一个个的试一试，反正总共加起来也不多。</p>
<h3 id="Alfred-XML格式数据"><a href="#Alfred-XML格式数据" class="headerlink" title="Alfred XML格式数据"></a>Alfred XML格式数据</h3><p><code>Alfred</code>中要求<code>ouputs</code>最后输出特定<code>Schema</code>的 <code>XML</code>内容。其实这一点我不太理解为什么，个人一直不喜欢<code>XML</code>格式的数据，重复臃肿、层级难于管理，就数据交换格式而言，个人比较倾向简单清晰易读的<code>JSON</code>，<code>Alfred</code>不支持返回<code>JSON</code>数据结果，不知道是不是由于<code>MacOS</code>的原因，没有深究。<br><code>Alfred</code>要求输出的内容以下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">items</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">autocomplete</span> = <span class="string">"autocompletex"</span> <span class="attr">uid</span> = <span class="string">"123321"</span> <span class="attr">arg</span> = <span class="string">"argsx"</span> &gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span> &gt;</span>title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">subtitle</span> &gt;</span>subtitle<span class="tag">&lt;/<span class="name">subtitle</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">icon</span> &gt;</span>icon<span class="tag">&lt;/<span class="name">icon</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">items</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>根节点为items 其中包括任意多个item节点，每一个item节点代表本次查询结果的一行。 每一个item节点包括若干parameter与childnode，其含义为： uid： 每一个item要有一个独立的uid，不可重复 valid：值为yes 或者 no, 若为no，该行结果不可被选择 autocomplete ： 自动补全的值， 使用tab可以令alfred自动补全为 autocompelete属性的值. arg：作为下一个模块的参数传递</p>
<p><title> 该行item的标题，也是主要显示的位置。 <subtitle> 该行字标题位置，会被显示为灰色小字 <icon> 该行图标的文件名，其大小为64X64 pixels</icon></subtitle></title></p>
<h3 id="接受参数"><a href="#接受参数" class="headerlink" title="接受参数"></a>接受参数</h3><p><code>Alfred</code>可以通过<code>query</code>字段来获取数据的内容。</p>
<h3 id="逻辑处理-amp-格式输出"><a href="#逻辑处理-amp-格式输出" class="headerlink" title="逻辑处理&amp;格式输出"></a>逻辑处理&amp;格式输出</h3><p>获取<code>query</code>的内容后，使用熟悉的脚本语言进行一些处理后组成转符合上面<code>Schema</code>的<code>XML</code>数据格式直接输出即可。</p>
<h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p><code>Alfred</code>很人性化的为开发者提供了调试工具，在<code>workflow</code>开发界面的右上角<code>Toggle debuggind mode</code>即可在下方打开一个<code>debug</code>窗口输出一些调试信息，方便开发。</p>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>以下是开发的一个简单的时间戳转换<code>workflow</code>,代码没有做严格的输入检查，只是简单的将输入的内容通过<code>php</code>的<code>date</code>函数转换成人类可读的<code>Y-m-d H:i:s</code>格式.<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>);</div><div class="line"><span class="keyword">require_once</span> (<span class="string">'workflows.php'</span>);</div><div class="line">$query = <span class="string">"&#123;query&#125;"</span>;</div><div class="line">$wf = <span class="keyword">new</span> Workflows ();</div><div class="line">$wf-&gt;result ( time (), $query, date(<span class="string">'Y-m-d H:i:s'</span>,$query), <span class="string">''</span>, <span class="string">'icon.png'</span>, <span class="string">'yes'</span> );</div><div class="line"><span class="keyword">echo</span> $wf-&gt;toxml();</div></pre></td></tr></table></figure></p>
<p>其中<code>worklows.php</code> 中就只用到了 输出 <code>XML</code> 的方法，这个方法就是将<code>resutl()</code>中传递的参数组装成特定<code>XML</code>数据。</p>
<h3 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h3><p>后来研究了下<a href="https://github.com/mwaterfall/alfred-datetime-format-converter" target="_blank" rel="external">datetime-format-converter</a>的源码，做了简单的修改，已经支持北京时间的转换，其实就是在作者的<code>python</code>代码中时间转换的时候加上了时区的设置，手动将时区设置为<code>Asia/Shanghai</code>即可。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_query_value</span><span class="params">(query_str)</span>:</span></div><div class="line">    <span class="string">""" Return value for the query string """</span></div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        query_str = str(query_str).strip(<span class="string">'"\' '</span>)</div><div class="line">        <span class="keyword">if</span> query_str == <span class="string">'now'</span>:</div><div class="line">            d = utcnow().shift(<span class="string">'Asia/Shanghai'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="comment"># Parse datetime string or timestamp</span></div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                d = epoch(float(query_str)).shift(<span class="string">"Asia/Shanghai"</span>)</div><div class="line">            <span class="keyword">except</span> ValueError:</div><div class="line">                d = parse(str(query_str)).shift(<span class="string">'Asia/Shanghai'</span>)</div><div class="line">    <span class="keyword">except</span> (TypeError, ValueError):</div><div class="line">        d = <span class="keyword">None</span></div><div class="line">    <span class="keyword">return</span> d</div></pre></td></tr></table></figure></p>
<p>将第<code>6</code>、<code>10</code>、<code>12</code>行中时间转换加上了<code>shift(&#39;Asia/Shanghai&#39;)</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d = epoch(float(query_str))</div></pre></td></tr></table></figure></p>
<p>改为<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d = epoch(float(query_str)).shift(<span class="string">"Asia/Shanghai"</span>)</div></pre></td></tr></table></figure></p>
<p>即可。其实更好的做法是自动检测系统信息推断出用户所使用的时区并转换。</p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul>
<li><a href="http://myg0u.com/python/2015/05/23/tutorial-alfred-workflow.html" target="_blank" rel="external">http://myg0u.com/python/2015/05/23/tutorial-alfred-workflow.html</a></li>
<li><a href="http://www.deanishe.net/alfred-workflow/" target="_blank" rel="external">http://www.deanishe.net/alfred-workflow/</a></li>
<li><a href="http://www.deanishe.net/alfred-workflow/tutorial.html" target="_blank" rel="external">http://www.deanishe.net/alfred-workflow/tutorial.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Alfred&lt;/code&gt; 的一个亮点功能就是&lt;code&gt;workflow&lt;/code&gt;。通过&lt;code&gt;workflow&lt;/code&gt;用户可以很容易的扩展&lt;code&gt;alfred&lt;/code&gt;的功能,&lt;br&gt;而开源的优秀的&lt;code&gt;workflow&lt;/code&gt;也有很多，不过如果找不到自己满意的&lt;code&gt;workflow&lt;/code&gt;，可以自己动手编写&lt;code&gt;workflow&lt;/code&gt;。自己动手，丰衣足食！&lt;br&gt;之所以重复造轮子的原因的是因为这个&lt;a href=&quot;https://github.com/mwaterfall/alfred-datetime-format-converter&quot;&gt;datetie-format-converter&lt;/a&gt; 转换的时间是按照UTC-GMT时间来算的，所以对于中国来说，属于东八区，所以就写了一个&lt;code&gt;php&lt;/code&gt;版本的自己使用。&lt;br&gt;这里只是简单记录下自己开发的一个&lt;code&gt;Unix&lt;/code&gt;时间戳转换的&lt;code&gt;workflow&lt;/code&gt;的过程，详细教程请自行&lt;code&gt;google&lt;/code&gt;或者参考 &lt;a href=&quot;http://myg0u.com/python/2015/05/23/tutorial-alfred-workflow.html&quot;&gt;这篇教程&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="tools" scheme="http://yoursite.com/categories/tools/"/>
    
    
      <category term="Alfred" scheme="http://yoursite.com/tags/Alfred/"/>
    
      <category term="workflow" scheme="http://yoursite.com/tags/workflow/"/>
    
  </entry>
  
  <entry>
    <title>解决MacOS Sierra 升级后原有的ssh private key无法通过验证</title>
    <link href="http://yoursite.com/MacOS-Sierra-ssh-config/"/>
    <id>http://yoursite.com/MacOS-Sierra-ssh-config/</id>
    <published>2017-03-19T05:36:32.000Z</published>
    <updated>2017-03-19T06:14:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>周末正好有空,就准备把<code>mac pro</code> 升级到最新的<code>sierra</code>版本，毕竟已经落后于<code>apple</code>官方两个比较大的版本了。</p>
<p>升级过程很简单，也很顺利。直接通过<code>appstore</code>上在线更新即可，下载完成之后安装向导步骤完成即可。</p>
<p>直到….我发现公司测试环境<code>502</code>之后，想要登陆到机器上去处理一下的时候，我的<code>ssh key</code>竟然毫无征兆的被deny了！升级之前能登陆服务器，升级之后无法登陆。</p>
<a id="more"></a>
<p>问了其他同事，跳板机能正常登陆的，排除了机房出问题的可能性。那就说明这是本地的<code>ssh agent</code>升级后出问题了。</p>
<p>同时，我也试了下<code>github</code>的<code>key</code>是否也不能使用。结果正如我所料:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ssh -v github.com</div><div class="line">.....</div><div class="line">.....</div><div class="line">debug1: Skipping ssh-dss key xxxx/xxxx/xxx/ - not in PubkeyAcceptedKeyTypes</div><div class="line">.....</div><div class="line"><span class="function">Permission <span class="title">denied</span> <span class="params">(publickey)</span>.</span></div></pre></td></tr></table></figure></p>
<p>更加证实了我的想法: <code>这是Mac升级后导致的</code><br>后来 <code>google</code> 发现这个问题很正常，很多人都在升级后遇到了这个问题。同时也暂时采用了临时方案：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Host <span class="string">"github.com"</span></div><div class="line">    User <span class="string">"git"</span></div><div class="line">    IdentityFile <span class="string">"/xxx/xxxx/xxx"</span></div><div class="line">    PubkeyAcceptedKeyTypes=+ssh-dss</div></pre></td></tr></table></figure></p>
<p>在<code>.ssh/config</code> 中添加了 <code>PubkeyAcceptedKeyTypes=+ssh-dss</code> 配置，让 ssh 接受 <code>dsa</code> 类型的<code>key</code>。</p>
<p>最终方案应该是采用更加安全的 <code>RSA</code> 算法来生成 <code>key</code>，长度为 <code>2048</code>的 <code>RSA</code>。<code>1024</code>长度的<code>RSA</code>已经有被暴力破解成功的记录了，所以建议采用 <code>2048</code> 长度<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -b <span class="number">2048</span> -C <span class="string">"new key"</span></div></pre></td></tr></table></figure></p>
<p>当然，采用 <code>ecdsa</code> 更好，不过考虑到<code>Openssl</code>的兼容问题，在<code>ecdsa</code>未完全通用的情况下还是使用<code>RSA</code>比较好。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;周末正好有空,就准备把&lt;code&gt;mac pro&lt;/code&gt; 升级到最新的&lt;code&gt;sierra&lt;/code&gt;版本，毕竟已经落后于&lt;code&gt;apple&lt;/code&gt;官方两个比较大的版本了。&lt;/p&gt;
&lt;p&gt;升级过程很简单，也很顺利。直接通过&lt;code&gt;appstore&lt;/code&gt;上在线更新即可，下载完成之后安装向导步骤完成即可。&lt;/p&gt;
&lt;p&gt;直到….我发现公司测试环境&lt;code&gt;502&lt;/code&gt;之后，想要登陆到机器上去处理一下的时候，我的&lt;code&gt;ssh key&lt;/code&gt;竟然毫无征兆的被deny了！升级之前能登陆服务器，升级之后无法登陆。&lt;/p&gt;
    
    </summary>
    
      <category term="os" scheme="http://yoursite.com/categories/os/"/>
    
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Linux zgrep使用笔记</title>
    <link href="http://yoursite.com/Linux-zgrep/"/>
    <id>http://yoursite.com/Linux-zgrep/</id>
    <published>2017-03-17T09:20:05.000Z</published>
    <updated>2017-03-18T15:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>grep</code> 可以用来搜索文件内容,而基于<code>grep</code>的 <code>zgrep</code>这可以用来在压缩包中搜索内容而不需要事先解压文件.</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">[root@yourdream ~]# <span class="keyword">cat</span> <span class="keyword">test</span>.go</div><div class="line">package main</div><div class="line">import (</div><div class="line">   <span class="string">"fmt"</span></div><div class="line">)</div><div class="line">func main()&#123;</div><div class="line">  fmt.Println(<span class="string">"Hello Golang!"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">[root@yourdream ~]# tar zcf <span class="keyword">test</span>.tar.gz <span class="keyword">test</span>.go</div><div class="line"></div><div class="line">[root@yourdream ~]# <span class="keyword">file</span> <span class="keyword">test</span>.tar.gz</div><div class="line"><span class="keyword">test</span>.tar.gz: gzip compressed data, from Unix, last modified: Fri Mar 17 17:23:09 2017</div><div class="line"></div><div class="line">[root@yourdream ~]# zgrep <span class="string">"fmt"</span> <span class="keyword">test</span>.tar.gz</div><div class="line">Binary <span class="keyword">file</span> (standard <span class="keyword">input</span>) matches</div><div class="line"></div><div class="line">[root@yourdream ~]# zgrep -a <span class="string">"fmt"</span> <span class="keyword">test</span>.tar.gz</div><div class="line">   <span class="string">"fmt"</span></div><div class="line">  fmt.Println(<span class="string">"Hello Golang!"</span>);</div><div class="line"></div><div class="line">[root@yourdream ~]# tar -tvf <span class="keyword">test</span>.tar.gz</div><div class="line">-rw-r--r-- root/root        81 2017-03-17 17:18 <span class="keyword">test</span>.go</div><div class="line"></div><div class="line">[root@yourdream ~]# tar -rvf <span class="keyword">test</span>.tar.gz <span class="keyword">test</span>/</div><div class="line"><span class="keyword">test</span>/</div><div class="line"><span class="keyword">test</span>/a.php</div><div class="line"></div><div class="line">[root@yourdream ~]# tar -tvf <span class="keyword">test</span>.tar.gz</div><div class="line">-rw-r--r-- root/root        81 2017-03-17 17:18 <span class="keyword">test</span>.go</div><div class="line">drwxr-xr-x root/root         0 2017-03-17 17:50 <span class="keyword">test</span>/</div><div class="line">-rw-r--r-- root/root      1127 2017-03-17 17:50 <span class="keyword">test</span>/a.php</div><div class="line"></div><div class="line">[root@yourdream ~]# zgrep -aHn <span class="string">"Hello"</span> <span class="keyword">test</span>.tar.gz</div><div class="line"><span class="keyword">test</span>.tar.gz:6:  fmt.Println(<span class="string">"Hello Golang!"</span>);</div><div class="line"><span class="keyword">test</span>.tar.gz:16:echo 'Hello php';</div></pre></td></tr></table></figure>
<ul>
<li>注意需要加上 <code>-a</code> 参数,让其二进制文件当做文本处理</li>
<li><code>tar -u -r</code> 先压缩包中添加文件</li>
<li><code>tar -H</code> 显示文件名</li>
<li><code>tar -n</code> 显示行号</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;grep&lt;/code&gt; 可以用来搜索文件内容,而基于&lt;code&gt;grep&lt;/code&gt;的 &lt;code&gt;zgrep&lt;/code&gt;这可以用来在压缩包中搜索内容而不需要事先解压文件.&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table
    
    </summary>
    
      <category term="notes" scheme="http://yoursite.com/categories/notes/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="zgrep" scheme="http://yoursite.com/tags/zgrep/"/>
    
  </entry>
  
  <entry>
    <title>iptables使用笔记</title>
    <link href="http://yoursite.com/Linux-iptables/"/>
    <id>http://yoursite.com/Linux-iptables/</id>
    <published>2017-03-17T07:07:10.000Z</published>
    <updated>2017-03-18T15:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Linux-下防火墙-iptables-命令使用笔记"><a href="#Linux-下防火墙-iptables-命令使用笔记" class="headerlink" title="Linux 下防火墙 iptables 命令使用笔记"></a>Linux 下防火墙 <code>iptables</code> 命令使用笔记</h4><ul>
<li><p>查看目前iptables设置 <code>iptables -vnL --line-numbers</code></p>
<ul>
<li><code>-v</code> verbose 详细信息</li>
<li><code>-n</code> 显示数字端口等</li>
<li><code>-L</code> list ,默认会显示<code>filter</code>表的规则</li>
<li><code>--line-numbers</code> 显示序号,删除、插入时有用</li>
</ul>
</li>
<li><p>删除规则<code>iptables -t table -D INPUT ruleNumber</code></p>
<ul>
<li><code>-t</code> table name,默认filter表,filter|Nat|Mangle|Raw</li>
<li><code>-D</code> delete</li>
<li><code>INPUT</code> chain name,INPUT|OUTPUT|FORWARD|PREROUTING|POSTROUTING</li>
<li><code>ruleNumber</code> rule number,可以使用<code>--line-numbers</code>参数查看</li>
</ul>
</li>
<li><p>查看状态<code>/etc/init.d/iptables status</code></p>
</li>
<li>保存修改<code>/etc/init.d/iptables save</code>,规则保存在<code>/etc/sysconfg/iptables</code>文件中</li>
<li>开启|重启|关闭<code>/etc/init.d/iptables start|restart|stop</code></li>
</ul>
<a id="more"></a>
<h4 id="examples"><a href="#examples" class="headerlink" title="examples"></a>examples</h4><p><code>iptables -I INPUT -s 1.1.1.1 -p tcp -dport 6666 -m comment --comment &quot;some comment&quot; -j ACCEPT</code></p>
<ul>
<li>向<code>INPUT</code>链中<code>I</code>(插入)一条规则,没有指定ruleNumber则插入到最前面</li>
<li><code>-s</code> source,来源ip或者hostname</li>
<li><code>-p</code> protocol 协议 tcp,udp,icmp(ping包),all 等 <code>/etc/protocols</code>中protocol的均可以</li>
<li><code>-dport</code> 目标端口 destination port,注意<code>--dport</code>和<code>-dport</code></li>
<li><code>-m</code> match extension,启用扩展, <code>comment</code>是注释扩展</li>
<li><code>-j</code> jump</li>
<li><code>ACCEPT</code> ACCEPT|DROP|REJECT|LOG</li>
</ul>
<p>详细可参考 <a href="http://www.cnblogs.com/metoy/p/4320813.html" target="_blank" rel="external">iptables详解</a>,文章很详细!</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Linux-下防火墙-iptables-命令使用笔记&quot;&gt;&lt;a href=&quot;#Linux-下防火墙-iptables-命令使用笔记&quot; class=&quot;headerlink&quot; title=&quot;Linux 下防火墙 iptables 命令使用笔记&quot;&gt;&lt;/a&gt;Linux 下防火墙 &lt;code&gt;iptables&lt;/code&gt; 命令使用笔记&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看目前iptables设置 &lt;code&gt;iptables -vnL --line-numbers&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; verbose 详细信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; 显示数字端口等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt; list ,默认会显示&lt;code&gt;filter&lt;/code&gt;表的规则&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--line-numbers&lt;/code&gt; 显示序号,删除、插入时有用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;删除规则&lt;code&gt;iptables -t table -D INPUT ruleNumber&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; table name,默认filter表,filter|Nat|Mangle|Raw&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; delete&lt;/li&gt;
&lt;li&gt;&lt;code&gt;INPUT&lt;/code&gt; chain name,INPUT|OUTPUT|FORWARD|PREROUTING|POSTROUTING&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ruleNumber&lt;/code&gt; rule number,可以使用&lt;code&gt;--line-numbers&lt;/code&gt;参数查看&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看状态&lt;code&gt;/etc/init.d/iptables status&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;保存修改&lt;code&gt;/etc/init.d/iptables save&lt;/code&gt;,规则保存在&lt;code&gt;/etc/sysconfg/iptables&lt;/code&gt;文件中&lt;/li&gt;
&lt;li&gt;开启|重启|关闭&lt;code&gt;/etc/init.d/iptables start|restart|stop&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="notes" scheme="http://yoursite.com/categories/notes/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="iptables" scheme="http://yoursite.com/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>Go Get安装一些第三方库-网络问题</title>
    <link href="http://yoursite.com/go-get-golang-x-packages/"/>
    <id>http://yoursite.com/go-get-golang-x-packages/</id>
    <published>2017-03-08T10:56:51.000Z</published>
    <updated>2017-03-18T15:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>go在go get 一些 package时候的会由于<code>众所周知</code>的原因而无法下载。比如在安装 <code>bee</code>的时候有可能会遇到无法下载 <code>golang.org/x/sys/unix</code> 的问题。<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">unrecognized <span class="keyword">import</span> <span class="built_in">path</span> <span class="string">"golang.org/x/sys/unix"</span></div></pre></td></tr></table></figure></p>
<p>解决方案：手动从<code>github</code>下载相应的<code>package</code></p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> <span class="title">--depth</span>=<span class="number">1</span> https://github.com/golang/xxx.git</div><div class="line">git <span class="keyword">clone</span> <span class="title">--depth</span>=<span class="number">1</span> https://github.com/golang/xxx.git</div></pre></td></tr></table></figure>
<p>注：xxx 为对应的需要的库</p>
<p>下载完成后，<code>软链</code>或者<code>复制</code> 到 <code>$GOPATH/src/golang.org/x/</code> 下即可。<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">golang<span class="meta">.org</span>/</div><div class="line">└── <span class="built_in">x</span></div><div class="line">    ├── net</div><div class="line">    ├── sys</div><div class="line">    └── tools</div><div class="line"></div><div class="line"><span class="number">4</span> directories</div></pre></td></tr></table></figure></p>
<p>更为简便的方法：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkdir -p <span class="variable">$GOPATH</span><span class="regexp">/src/g</span>olang.org<span class="regexp">/x/</span></div><div class="line">cd !$</div><div class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/golang/</span>net.git</div><div class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/golang/</span>sys.git</div><div class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/golang/</span>tools.git</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;go在go get 一些 package时候的会由于&lt;code&gt;众所周知&lt;/code&gt;的原因而无法下载。比如在安装 &lt;code&gt;bee&lt;/code&gt;的时候有可能会遇到无法下载 &lt;code&gt;golang.org/x/sys/unix&lt;/code&gt; 的问题。&lt;br&gt;&lt;figur
    
    </summary>
    
      <category term="go" scheme="http://yoursite.com/categories/go/"/>
    
    
      <category term="go" scheme="http://yoursite.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Atom 调整左侧目录字体大小</title>
    <link href="http://yoursite.com/atom-set-font-size/"/>
    <id>http://yoursite.com/atom-set-font-size/</id>
    <published>2017-03-07T14:39:49.000Z</published>
    <updated>2017-03-18T15:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚安装好 atom的时候， 左侧的 tree 目录字体特别小，可以通过一下方式来设置</p>
<ul>
<li><p>打开<code>Atom</code>-<code>Stylesheet</code></p>
</li>
<li><p>找到 <code>.tree-view</code></p>
<figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// <span class="built_in">style</span> the <span class="built_in">background</span> <span class="built_in">color</span> of the tree <span class="built_in">view</span></div><div class="line">.tree-<span class="built_in">view</span> &#123;</div><div class="line">  // <span class="built_in">background</span>-<span class="built_in">color</span>: whitesmoke;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>给 <code>.tree-view</code> 添加 <code>font-size</code> 即可：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.tree-view</span> &#123;</div><div class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>当然，添加其他属性也是可以的，可以自己定制样式，颜色，字体，字号等，<code>CSS</code>语法</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚刚安装好 atom的时候， 左侧的 tree 目录字体特别小，可以通过一下方式来设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开&lt;code&gt;Atom&lt;/code&gt;-&lt;code&gt;Stylesheet&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;找到 &lt;code&gt;.tree-v
    
    </summary>
    
      <category term="tools" scheme="http://yoursite.com/categories/tools/"/>
    
    
      <category term="atom" scheme="http://yoursite.com/tags/atom/"/>
    
  </entry>
  
  <entry>
    <title>Atom设置代理</title>
    <link href="http://yoursite.com/atom_set_proxy/"/>
    <id>http://yoursite.com/atom_set_proxy/</id>
    <published>2017-03-07T14:10:01.000Z</published>
    <updated>2017-03-18T15:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于<code>众所周知</code>的原因，Atom有时候安装插件的时候很慢甚至无法安装。可以通过设置代理来解决。<br>前提是已经有一个可以使用的http代理。<a href="/transfer_socks5_to_http_proxy">参考之前的文章：将socks5转为http代理</a></p>
<ul>
<li><p>atom自带了一个工具 <code>apm</code>(atom package management) 这个工具可以用来设置一些系统配置</p>
</li>
<li><p>可以用<code>apm config list</code> 查看现有的系统配置信息</p>
</li>
</ul>
<p>下面开始设置 http代理：<br><a id="more"></a></p>
<ul>
<li>执行一下命令</li>
</ul>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apm config <span class="built_in">set</span> <span class="keyword">http</span>-proxy <span class="keyword">http</span>://host:port</div><div class="line">apm config <span class="built_in">set</span> <span class="keyword">https</span>-proxy <span class="keyword">http</span>://host:port</div><div class="line">apm config <span class="built_in">set</span> strict-ssl <span class="literal">false</span></div></pre></td></tr></table></figure>
<ul>
<li>注意两点：<ul>
<li>https 配置的也是 http 而不是 https!</li>
<li>set strict-ssl false 可以避免ssl 证书错误问题</li>
</ul>
</li>
</ul>
<blockquote>
<p>其实直接修改 ~/.atom/.apmrc 文件也是可行的</p>
</blockquote>
<p>具体说明可以查看 <a href="https://github.com/atom/apm#behind-a-firewall" target="_blank" rel="external">这里</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于&lt;code&gt;众所周知&lt;/code&gt;的原因，Atom有时候安装插件的时候很慢甚至无法安装。可以通过设置代理来解决。&lt;br&gt;前提是已经有一个可以使用的http代理。&lt;a href=&quot;/transfer_socks5_to_http_proxy&quot;&gt;参考之前的文章：将socks5转为http代理&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;atom自带了一个工具 &lt;code&gt;apm&lt;/code&gt;(atom package management) 这个工具可以用来设置一些系统配置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以用&lt;code&gt;apm config list&lt;/code&gt; 查看现有的系统配置信息&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面开始设置 http代理：&lt;br&gt;
    
    </summary>
    
      <category term="tools" scheme="http://yoursite.com/categories/tools/"/>
    
    
      <category term="atom" scheme="http://yoursite.com/tags/atom/"/>
    
      <category term="proxy" scheme="http://yoursite.com/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>Mac上使用Privoxy 将 socks5转换为 http 代理</title>
    <link href="http://yoursite.com/transfer_socks5_to_http_proxy/"/>
    <id>http://yoursite.com/transfer_socks5_to_http_proxy/</id>
    <published>2017-03-06T15:07:20.000Z</published>
    <updated>2017-03-18T15:01:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>shadowsocks 挺不错的，但是有些时候需要使用http代理来爬墙。这时候可以使用privoxy来将 socks5 代理转换为 http代理。</p>
<p>步骤如下：</p>
<ul>
<li><p>首先，确保 shadowsocks 已经正常起来的，默认的本地socks5端口号为 1080,可以使用 netstat 和 lsof 命令查看端口情况。</p>
</li>
<li><p>安装privoxy, mac 使用 brew install privoxy 即可</p>
</li>
<li><p>安装完成后，修改privoxy配置文件</p>
<a id="more"></a>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim <span class="regexp">/usr/</span>local<span class="regexp">/etc/</span>privoxy<span class="regexp">/config</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改内容如下：</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">forward-socks5t   /               <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">1080</span> .</div><div class="line">listen-address  <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">8118</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>listen-address</code> 默认是监听本地8118端口，如果端口没有被占用，可以不用修改</p>
<ul>
<li>启动privoxy<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/usr/</span>local<span class="regexp">/sbin/</span>privoxy <span class="regexp">/usr/</span>local<span class="regexp">/etc/</span>privoxy<span class="regexp">/config</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>可以使用 <code>ps aux|grep privoxy</code>和 <code>lsof -i:8118</code>来检查是否成功启动</p>
<ul>
<li>正常情况下,可以使用http代理了，代理地址<code>http://127.0.0.1:8118</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;shadowsocks 挺不错的，但是有些时候需要使用http代理来爬墙。这时候可以使用privoxy来将 socks5 代理转换为 http代理。&lt;/p&gt;
&lt;p&gt;步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先，确保 shadowsocks 已经正常起来的，默认的本地socks5端口号为 1080,可以使用 netstat 和 lsof 命令查看端口情况。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装privoxy, mac 使用 brew install privoxy 即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装完成后，修改privoxy配置文件&lt;/p&gt;
    
    </summary>
    
      <category term="tools" scheme="http://yoursite.com/categories/tools/"/>
    
    
      <category term="proxy" scheme="http://yoursite.com/tags/proxy/"/>
    
      <category term="socks5" scheme="http://yoursite.com/tags/socks5/"/>
    
      <category term="http" scheme="http://yoursite.com/tags/http/"/>
    
      <category term="privoxy" scheme="http://yoursite.com/tags/privoxy/"/>
    
      <category term="shadowsocks" scheme="http://yoursite.com/tags/shadowsocks/"/>
    
  </entry>
  
</feed>
